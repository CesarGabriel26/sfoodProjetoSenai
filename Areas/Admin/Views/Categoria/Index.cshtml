@model X.PagedList.PagedList<App.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

 <br>
<h1  class="">Categorias</h1>

<form class="d-flex align-items-center no-print" asp-action="Index" method="get">
    <input type="text" name="txtFiltro" placeholder="Digite aqui o que procura" value="@ViewBag.txtFiltro"
        class="form-control">

    <select name="celOrdenacao" class="form-control" id="">
        <option value="Nome">Ordenar por Nome</option>
    </select>

    <button class="btn btn-primary" type="submit"><i class="bi bi-search"></i> Buscar</button>
    <button class="btn btn-success" value="Relatorio" name="botao" type="submit">Relatorio</button>

    <div>
        <button class="btn btn-secondary dropdown-toggle btn-danger" data-bs-toggle="dropdown" aria-expanded="false">
            Exportar
        </button>
        <ul class="dropdown-menu">
            <li>
                <button class="dropdown-item" type="submit" name="botao" value="XML">
                    XML
                </button>
            </li>
            <li>
                <button class="dropdown-item" type="submit" name="botao" value="Json">
                    Json
                </button>
            </li>
        </ul>
    </div>
</form>

<table class="table ">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td class="no-print">
                    <a class="" asp-action="Edit" asp-route-id="@item.CategoriaId">Editar</a> |
                    <a class="" asp-action="Details" asp-route-id="@item.CategoriaId">Detalhes</a> |
                    <a class="" asp-action="Delete" asp-route-id="@item.CategoriaId">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="Create" class="botaoVermelho no-print">Criar novo item</a>
</p>

<div class="d-flex justify-content-center no-print no-print">
    <ul class="pagination">
        @{
            string primeira = "";
            string ultima = "";
        }

        @if (!Model.HasPreviousPage)
            primeira = "disabled";

        @if (!Model.HasNextPage)
            ultima = "disabled";

        <li class="page-item @primeira">
            <a class="page-link" asp-route-pagina="1" asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;&lt;</a>
        </li>
        <li class="page-item @primeira">
            <a class="page-link" asp-route-pagina="@(Model.PageNumber - 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;</a>
        </li>

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-route-pagina="@i" asp-route-txtFiltro="@ViewData["txtFiltro"]">@i</a>
            </li>
        }

        <li class="page-item @ultima">
            <a class="page-link" asp-route-pagina="@(Model.PageNumber + 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">></a>
        </li>
        <li class="page-item @ultima">
            <a class="page-link" asp-route-pagina="@Model.PageCount" asp-route-txtFiltro="@ViewData["txtFiltro"]">>></a>
        </li>

    </ul>
</div>